package Questions_Linked_list;

import java.util.*;
public class er {
    public static void main(String args[]) {
		Scanner sc=new Scanner(System.in);
		int nop=sc.nextInt();
		int l=sc.nextInt();
		int [] rank=new int[l];
		for(int i=0;i<rank.length;i++){
			rank[i]=sc.nextInt();
		}
		Arrays.sort(rank);
		System.out.println(Minimum(rank,nop));
    }
	public static int Minimum(int[] rank, int nop) {
		int lo=0;
		int hi=Integer.MAX_VALUE;
		int ans=-1;
		while(lo<=hi) {
			int mid=(lo+hi)/2;
			if(ispossible(rank,nop,mid)) {
				ans=mid;
				hi=mid-1;
			}
			else {
				lo=mid+1;
			}
		}
		return ans;
	}
	public static boolean ispossible(int[] rank, int nop, int mid) {
		int N=0;
		for(int i=0;i<rank.length;i++) {
			int c=count(rank[i],mid);
			if(c<=nop) {
				N=N+c;
			}
			if(N>=nop) {
				return true;
			}
		}
		return false;
	}
	public static int count(int num, int mid) {
		int sum=0;
		int c=0;
		for(int i=1;i<100;i++) {
			sum=sum+num*i;
			if(sum<=mid) {
				c++;
			}
			else {
				break;
			}
		}
		return c;
	}
}